#!/bin/bash

usage() {
  echo "Run something in a container, volume-mapped to the current directory."
  echo ""
  echo "--image [image]       Image to use."
  echo "--root                Runs as root user (omits '-u' arg)"
  echo "--bash                Runs the provided command as a '-c' parameter to a bash command."
  echo "--adduser             Adds a user inside the container with the same id/gid as the host user. Infers '--bash', '--root'."
  echo "--offline             Disables networking."
  echo "--description [desc]  Adds a custom description."
  echo "-- [args...]          What to run in container. Default: bash shell."
}

root=
bash=
adduser=
offline=
customcommand=
memory=

while :; do
  if [ $# -le 0 ]; then
      break
  fi

  lowerI="$(echo $1 | awk '{print tolower($0)}')"
  case $lowerI in
    -h|--help)
      usage
      exit 0
      ;;
    --)
      # Interpret remaining args as the command to run.
      customcommand=1
      shift
      break
      ;;
    --image)
      image=$2
      shift
      ;;
    --root)
      root=1
      ;;
    --bash)
      bash=1
      ;;
    --adduser)
      adduser=1
      bash=1
      root=1
      ;;
    --offline)
      offline=1
      ;;
    --description)
      description=$2
      shift
      ;;
    --memory)
      memory=$2
      shift
      ;;
    *)
      echo "Unrecognized argument '$1'"
      usage
      exit 1
      ;;
  esac

  shift
done

if [ ! "$image" ]
then
  echo "No image set."
  exit 1
fi

description=${description:-container${net:+ networking on}}

netargs=''
if [ "$offline" ]
then
  netargs='--network none'
fi

idargs=-u="$(id -u):$(id -g)"
homeargs='-e HOME=/work/.container-home'
if [ "$root" ]
then
  idargs=
  homeargs=
fi

memargs=''
if [ "$memory" ]
then
  memargs="--memory $memory"
fi

addusercommand=
if [ "$adduser" ]
then
  addusercommand="
    addgroup --gid $(id -g) buildergroup
    adduser --home /work/.container-home --uid $(id -u) --gid $(id -g) --gecos '' --disabled-password builder
    sudo -u builder "
fi

PS1="\[\e[0;93m\]## ($description) \u\[\e[m\] \[\e[1;34m\]\w\[\e[m\]\[\e[0;93m\]\n#> \[\e[m\]"
PS2="\[\e[0;93m\]#>\[\e[0m\] "

run() {
  set -x
  docker run \
    -it --rm \
    $idargs \
    $homeargs \
    -e SOURCE_BUILD_SKIP_SUBMODULE_CHECK \
    -e VSS_NUGET_EXTERNAL_FEED_ENDPOINTS \
    -e NUGET_CREDENTIALPROVIDER_SESSIONTOKENCACHE_ENABLED \
    -e internalPackageFeedPat \
    -e GIT_COMMITTER_NAME=container \
    -e GIT_COMMITTER_EMAIL=container@example.org \
    -e GIT_AUTHOR_NAME=container \
    -e GIT_AUTHOR_EMAIL=container@example.org \
    $netargs \
    $memargs \
    -e "PS1=$PS1" \
    -e "PS2=$PS2" \
    -v $(pwd):/work:z \
    -w /work \
    "$image" \
    "$@"
}

if [ "$customcommand" ]
then
  if [ "$bash" ]
  then
    run bash -c "$addusercommand$@"
  else
    run "$@"
  fi
else
  run bash -c "${addusercommand}bash"
fi

